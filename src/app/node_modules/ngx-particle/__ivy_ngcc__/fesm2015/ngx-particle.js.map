{"version":3,"file":"ngx-particle.js","sources":["ngx-particle/lib/particles.component.ts","ngx-particle/lib/models/utils.ts","ngx-particle/lib/models/particleInteraction.ts","ngx-particle/lib/models/particle.ts","ngx-particle/lib/models/particlesManager.ts","ngx-particle/lib/models/canvasManager.ts","ngx-particle/lib/particles.directive.ts","ngx-particle/lib/particles.module.ts","ngx-particle/public_api.ts","ngx-particle/ngx-particle.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport { IParams } from './models';\r\n\r\n@Component({\r\n    selector: 'particles',\r\n    template: `\r\n        <div [ngStyle]=\"style\" class=\"particles-container\">\r\n            <canvas d-particles [params]=\"params\" [style.width.%]=\"width\" [style.height.%]=\"height\"></canvas>\r\n        </div>\r\n    `\r\n})\r\nexport class ParticlesComponent {\r\n\r\n    @Input() width: number = 100;\r\n    @Input() height: number = 100;\r\n    @Input() params: IParams;\r\n    @Input() style: Object = {};\r\n\r\n    constructor() { }\r\n}","import { IParams, ITmpParams } from \"./interfaces\";\r\nimport { Particle } from \"./particle\";\r\n\r\nexport type RGB = {\r\n\tr: number;\r\n\tg: number;\r\n\tb: number;\r\n};\r\n\r\nexport type HSL = {\r\n\th: number;\r\n\ts: number;\r\n\tl: number;\r\n};\r\n\r\nexport const hexToRgb: (hex: string) => RGB =\r\n    (hex) => {\r\n        let shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n        hex = hex.replace(shorthandRegex, (m, r, g, b) => {\r\n            return r + r + g + g + b + b;\r\n        });\r\n        let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n            r: parseInt(result[1], 16),\r\n            g: parseInt(result[2], 16),\r\n            b: parseInt(result[3], 16)\r\n        } : null;\r\n    };\r\n\r\nexport const clamp: (number: number, min: number, max: number) => number =\r\n    (number, min, max) => {\r\n        return Math.min(Math.max(number, min), max);\r\n    };\r\n\r\nexport const isInArray: (value: any, array: any) => boolean =\r\n    (value, array) => {\r\n        return array.indexOf(value) > -1;\r\n    };\r\n\r\nexport const deepExtend: (destination: any, source: any) => any =\r\n    function (destination, source) {\r\n        for (let property in source) {\r\n            if (source[property] &&\r\n                source[property].constructor &&\r\n                source[property].constructor === Object) {\r\n                destination[property] = destination[property] || {};\r\n                deepExtend(destination[property], source[property]);\r\n            } else {\r\n                destination[property] = source[property];\r\n            }\r\n        }\r\n        return destination;\r\n    };\r\n\r\nexport const getColor: (colorObject: any) => { rgb?: RGB, hsl?: HSL } =\r\n    (colorObject) => {\r\n        let color: { rgb?: RGB, hsl?: HSL } = {};\r\n        if (typeof (colorObject) == 'object') {\r\n            if (colorObject instanceof Array) {\r\n                let selectedColor: string = colorObject[Math.floor(Math.random() * colorObject.length)];\r\n                color.rgb = hexToRgb(selectedColor);\r\n            } else {\r\n                let { r, g, b } = colorObject;\r\n                if (r !== undefined && g !== undefined && b !== undefined) {\r\n                    color.rgb = { r, g, b };\r\n                } else {\r\n                    let { h, s, l } = colorObject;\r\n                    if (h !== undefined && g !== undefined && b !== undefined) {\r\n                        color.hsl = { h, s, l };\r\n                    }\r\n                }\r\n            }\r\n        } else if (colorObject == 'random') {\r\n            color.rgb = {\r\n                r: (Math.floor(Math.random() * 255) + 1),\r\n                g: (Math.floor(Math.random() * 255) + 1),\r\n                b: (Math.floor(Math.random() * 255) + 1)\r\n            }\r\n        } else if (typeof (colorObject) == 'string') {\r\n            color.rgb = hexToRgb(colorObject);\r\n        }\r\n        return color;\r\n    };\r\n\r\nexport const getDefaultParams: () => IParams =\r\n    () => {\r\n        return {\r\n            particles: {\r\n                number: {\r\n                    value: 100,\r\n                    density: {\r\n                        enable: true,\r\n                        value_area: 800\r\n                    }\r\n                },\r\n                color: {\r\n                    value: '#FFF'\r\n                },\r\n                shape: {\r\n                    type: 'circle',\r\n                    stroke: {\r\n                        width: 0,\r\n                        color: '#000000'\r\n                    },\r\n                    polygon: {\r\n                        nb_sides: 5\r\n                    },\r\n                    image: {\r\n                        src: '',\r\n                        width: 100,\r\n                        height: 100\r\n                    }\r\n                },\r\n                opacity: {\r\n                    value: 0.5,\r\n                    random: false,\r\n                    anim: {\r\n                        enable: true,\r\n                        speed: 1,\r\n                        opacity_min: 0.1,\r\n                        sync: false\r\n                    }\r\n                },\r\n                size: {\r\n                    value: 3,\r\n                    random: true,\r\n                    anim: {\r\n                        enable: false,\r\n                        speed: 40,\r\n                        size_min: 0,\r\n                        sync: false\r\n                    }\r\n                },\r\n                line_linked: {\r\n                    enable: true,\r\n                    distance: 150,\r\n                    color: '#FFF',\r\n                    opacity: 0.6,\r\n                    width: 1,\r\n                    shadow: {\r\n                        enable: false,\r\n                        blur: 5,\r\n                        color: 'lime'\r\n                    }\r\n                },\r\n                move: {\r\n                    enable: true,\r\n                    speed: 3,\r\n                    direction: 'none',\r\n                    random: false,\r\n                    straight: false,\r\n                    out_mode: 'out',\r\n                    bounce: true,\r\n                    attract: {\r\n                        enable: false,\r\n                        rotateX: 3000,\r\n                        rotateY: 3000\r\n                    }\r\n                },\r\n                array: []\r\n            },\r\n            interactivity: {\r\n                detect_on: 'canvas',\r\n                events: {\r\n                    onhover: {\r\n                        enable: true,\r\n                        mode: 'grab'\r\n                    },\r\n                    onclick: {\r\n                        enable: true,\r\n                        mode: 'push'\r\n                    },\r\n                    resize: true\r\n                },\r\n                modes: {\r\n                    grab: {\r\n                        distance: 200,\r\n                        line_linked: {\r\n                            opacity: 1\r\n                        }\r\n                    },\r\n                    bubble: {\r\n                        distance: 200,\r\n                        size: 80,\r\n                        duration: 0.4\r\n                    },\r\n                    repulse: {\r\n                        distance: 200,\r\n                        duration: 0.4\r\n                    },\r\n                    push: {\r\n                        particles_nb: 4\r\n                    },\r\n                    remove: {\r\n                        particles_nb: 2\r\n                    }\r\n                },\r\n                mouse: {}\r\n            },\r\n            retina_detect: true\r\n        }\r\n    };\r\n\r\n\r\nexport function loadImg(params: IParams, tmp: ITmpParams) {\r\n    let { particles } = params;\r\n\r\n    tmp.img_error = undefined;\r\n\r\n    if (particles.shape.type == 'image' && particles.shape.image.src != '') {\r\n        if (tmp.img_type == 'svg') {\r\n            let xhr: XMLHttpRequest = new XMLHttpRequest();\r\n            xhr.open('GET', particles.shape.image.src);\r\n            xhr.onreadystatechange = (data: any) => {\r\n                if (xhr.readyState == 4) {\r\n                    if (xhr.status == 200) {\r\n                        tmp.source_svg = data.currentTarget.response;\r\n                        if (tmp.source_svg == undefined) {\r\n                            let check: any;\r\n                            tmp.checkAnimFrame = requestAnimationFrame(check);\r\n                        }\r\n                    } else {\r\n                        tmp.img_error = true;\r\n                        throw \"Error : image not found\";\r\n                    }\r\n                }\r\n            };\r\n            xhr.send();\r\n        } else {\r\n            let img: HTMLImageElement = new Image();\r\n            img.addEventListener('load', () => {\r\n                tmp.img_obj = img;\r\n                cancelAnimationFrame(tmp.checkAnimFrame);\r\n            });\r\n            img.src = particles.shape.image.src;\r\n        }\r\n    } else {\r\n        tmp.img_error = true;\r\n        throw \"Error : no image.src\";\r\n    }\r\n}\r\n\r\nexport function createSvgImg(particle: Particle, tmp: ITmpParams): void {\r\n    let svgXml: string = tmp.source_svg;\r\n    let rgbHex: RegExp = /#([0-9A-F]{3,6})/gi;\r\n    let coloredSvgXml: string = svgXml.replace(rgbHex, (m, r, g, b) => {\r\n        let color_value: string;\r\n        if (particle.color.rgb) {\r\n            let { r, g, b } = particle.color.rgb;\r\n            color_value = `rgba( ${r}, ${g}, ${b}, ${particle.opacity} )`;\r\n        } else {\r\n            let { h, s, l } = particle.color.hsl;\r\n            color_value = `rgba( ${h}, ${s}, ${l}, ${particle.opacity} )`;\r\n        }\r\n        return color_value;\r\n    });\r\n\r\n    let svg: Blob = new Blob([coloredSvgXml], {\r\n        type: 'image/svg+xml;charset=utf-8'\r\n    });\r\n\r\n    let DOMURL: any = window.URL || window;\r\n    let url: any = DOMURL.createObjectURL(svg);\r\n\r\n    let img = new Image();\r\n    img.addEventListener('load', () => {\r\n        particle.img.obj = img;\r\n        particle.img.loaded = true;\r\n        DOMURL.revokeObjectURL(url);\r\n        tmp.count_svg++;\r\n    });\r\n    img.src = url;\r\n}","import { Particle } from './particle';\r\nimport { IParams, ICanvasParams } from './interfaces';\r\n\r\nexport class ParticleInteraction {\r\n    constructor() { }\r\n\r\n    linkParticles(p1: Particle, p2: Particle, params: IParams, canvasParams: ICanvasParams): void {\r\n        let dx: number = p1.x - p2.x;\r\n        let dy: number = p1.y - p2.y;\r\n        let dist: number = Math.sqrt(dx * dx + dy * dy);\r\n        let { line_linked } = params.particles;\r\n\r\n        if (dist <= params.particles.line_linked.distance) {\r\n            let opacity_line: number = params.particles.line_linked.opacity - (dist / (1 / params.particles.line_linked.opacity)) / params.particles.line_linked.distance;\r\n            if (opacity_line > 0) {\r\n                let color_line: any = params.particles.line_linked.color_rgb_line;\r\n                let { r, g, b } = color_line;\r\n                canvasParams.ctx.save();\r\n                canvasParams.ctx.strokeStyle = `rgba( ${r}, ${g}, ${b}, ${opacity_line} )`;\r\n                canvasParams.ctx.lineWidth = params.particles.line_linked.width;\r\n\r\n                canvasParams.ctx.beginPath();\r\n                if (line_linked.shadow.enable) {\r\n                    canvasParams.ctx.shadowBlur = line_linked.shadow.blur;\r\n                    canvasParams.ctx.shadowColor = line_linked.shadow.color;\r\n                }\r\n\r\n                canvasParams.ctx.moveTo(p1.x, p1.y);\r\n                canvasParams.ctx.lineTo(p2.x, p2.y);\r\n                canvasParams.ctx.stroke();\r\n                canvasParams.ctx.closePath();\r\n                canvasParams.ctx.restore();\r\n            }\r\n        }\r\n    }\r\n\r\n    attractParticles(p1: Particle, p2: Particle, params: IParams): void {\r\n        let dx: number = p1.x - p2.x;\r\n        let dy: number = p1.y - p2.y;\r\n        let dist: number = Math.sqrt(dx * dx + dy * dy);\r\n\r\n        if (dist <= params.particles.line_linked.distance) {\r\n            let ax = dx / (params.particles.move.attract.rotateX * 1000);\r\n            let ay = dy / (params.particles.move.attract.rotateY * 1000);\r\n\r\n            p1.vx -= ax;\r\n            p1.vy -= ay;\r\n\r\n            p2.vx += ax;\r\n            p2.vy += ay;\r\n        }\r\n    }\r\n\r\n    bounceParticles(p1: Particle, p2: Particle): void {\r\n        let dx: number = p1.x - p2.x;\r\n        let dy: number = p1.y - p2.y;\r\n        let dist: number = Math.sqrt(dx * dx + dy * dy);\r\n        let dist_p: number = p1.radius + p2.radius;\r\n\r\n        if (dist <= dist_p) {\r\n            p1.vx = -p1.vx;\r\n            p1.vy = -p1.vy;\r\n            p2.vx = -p2.vx;\r\n            p2.vy = -p2.vy;\r\n        }\r\n    }\r\n}","import { ICanvasParams, IParams, ITmpParams } from './interfaces';\r\nimport { getColor, createSvgImg } from './utils';\r\n\r\nexport class Particle {\r\n    radius: number;\r\n    radius_bubble: number;\r\n    size_status: boolean;\r\n    vs: number;\r\n\r\n    x: number;\r\n    y: number;\r\n    color: any;\r\n\r\n    opacity: number;\r\n    opacity_bubble: number;\r\n    opacity_status: boolean;\r\n    vo: number;\r\n\r\n    vx: number;\r\n    vy: number;\r\n\r\n    vx_i: number;\r\n    vy_i: number;\r\n\r\n    shape: string;\r\n\r\n    img: { src: string; ratio: number; loaded?: boolean; obj?: any; };\r\n\r\n    constructor(private _canvasParams: ICanvasParams, private _params: IParams, private _tmpParams: ITmpParams, color?: any, opacity?: any, position?: { x: number; y: number; }) {\r\n        this._setupSize();\r\n        this._setupPosition(position);\r\n        this._setupColor(color);\r\n        this._setupOpacity();\r\n        this._setupAnimation();\r\n    }\r\n\r\n    private _setupSize(): void {\r\n        this.radius = (this._params.particles.size.random ? Math.random() : 1) * this._params.particles.size.value;\r\n        if (this._params.particles.size.anim.enable) {\r\n            this.size_status = false;\r\n            this.vs = this._params.particles.size.anim.speed / 100;\r\n            if (!this._params.particles.size.anim.sync)\r\n                this.vs = this.vs * Math.random();\r\n        }\r\n    }\r\n\r\n    private _setupPosition(position?: { x: number; y: number; }): void {\r\n        this.x = position ? position.x : Math.random() * this._canvasParams.width;\r\n        this.y = position ? position.y : Math.random() * this._canvasParams.height;\r\n\r\n        if (this.x > this._canvasParams.width - this.radius * 2) {\r\n            this.x = this.x - this.radius;\r\n        } else if (this.x < this.radius * 2) {\r\n            this.x = this.x + this.radius;\r\n        }\r\n        if (this.y > this._canvasParams.height - this.radius * 2) {\r\n            this.y = this.y - this.radius;\r\n        } else if (this.y < this.radius * 2) {\r\n            this.y = this.y + this.radius;\r\n        }\r\n\r\n        if (this._params.particles.move.bounce) {\r\n            this._checkOverlap(this, position);\r\n        }\r\n    }\r\n\r\n    private _checkOverlap(p1: Particle, position?: { x: number; y: number; }): void {\r\n        let { particles } = this._params;\r\n\r\n        particles.array.forEach((particle: Particle) => {\r\n            let p2: Particle = particle;\r\n\r\n            let dx: number = p1.x - p2.x;\r\n            let dy: number = p1.y - p2.y;\r\n            let dist: number = Math.sqrt(dx * dx + dy * dy);\r\n\r\n            if (dist <= p1.radius + p2.radius) {\r\n                p1.x = position ? position.x : Math.random() * this._canvasParams.width;\r\n                p1.y = position ? position.y : Math.random() * this._canvasParams.height;\r\n                this._checkOverlap(p1);\r\n            }\r\n        });\r\n    }\r\n\r\n    private _setupColor(color?: any) {\r\n        this.color = getColor(color.value);\r\n    }\r\n\r\n    private _setupOpacity(): void {\r\n        this.opacity = (this._params.particles.opacity.random ? Math.random() : 1) * this._params.particles.opacity.value;\r\n        if (this._params.particles.opacity.anim.enable) {\r\n            this.opacity_status = false;\r\n            this.vo = this._params.particles.opacity.anim.speed / 100;\r\n            if (!this._params.particles.opacity.anim.sync) {\r\n                this.vo = this.vo * Math.random();\r\n            }\r\n        }\r\n    }\r\n\r\n    private _setupAnimation(): void {\r\n        let velbase: { x: number; y: number; } = null;\r\n        switch (this._params.particles.move.direction) {\r\n            case 'top':\r\n                velbase = { x: 0, y: -1 };\r\n                break;\r\n            case 'top-right':\r\n                velbase = { x: 0.5, y: -0.5 };\r\n                break;\r\n            case 'right':\r\n                velbase = { x: 1, y: 0 };\r\n                break;\r\n            case 'bottom-right':\r\n                velbase = { Â x: 0.5, y: 0.5 };\r\n                break;\r\n            case 'bottom':\r\n                velbase = { x: 0, y: 1 };\r\n                break;\r\n            case 'bottom-left':\r\n                velbase = { x: -0.5, y: 1 };\r\n                break;\r\n            case 'left':\r\n                velbase = { x: -1, y: 0 };\r\n                break;\r\n            case 'top-left':\r\n                velbase = { Â x: -0.5, y: -0.5 };\r\n                break;\r\n            default:\r\n                velbase = { Â x: 0, y: 0 };\r\n                break;\r\n        }\r\n\r\n        if (this._params.particles.move.straight) {\r\n            this.vx = velbase.x;\r\n            this.vy = velbase.y;\r\n            if (this._params.particles.move.random) {\r\n                this.vx = this.vx * (Math.random());\r\n                this.vy = this.vy * (Math.random());\r\n            }\r\n        } else {\r\n            this.vx = velbase.x + Math.random() - 0.5;\r\n            this.vy = velbase.y + Math.random() - 0.5;\r\n        }\r\n\r\n        this.vx_i = this.vx;\r\n        this.vy_i = this.vy;\r\n\r\n        let shape_type: any = this._params.particles.shape.type;\r\n\r\n        if (typeof (shape_type) == 'object') {\r\n            if (shape_type instanceof Array) {\r\n                let shape_selected: string = shape_type[Math.floor(Math.random() * shape_type.length)];\r\n                this.shape = shape_selected;\r\n            }\r\n        } else {\r\n            this.shape = shape_type;\r\n        }\r\n\r\n        if (this.shape == 'image') {\r\n            let sh: any = this._params.particles.shape;\r\n            this.img = {\r\n                src: sh.image.src,\r\n                ratio: sh.image.width / sh.image.height\r\n            };\r\n\r\n            if (!this.img.ratio)\r\n                this.img.ratio = 1;\r\n            if (this._tmpParams.img_type == 'svg' && this._tmpParams.source_svg != undefined) {\r\n                createSvgImg(this, this._tmpParams);\r\n                if (this._tmpParams.pushing) {\r\n                    this.img.loaded = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _drawShape(c: CanvasRenderingContext2D, startX: number, startY: number, sideLength: number, sideCountNumerator: number, sideCountDenominator: number): void {\r\n        let sideCount: number = sideCountNumerator * sideCountDenominator;\r\n        let decimalSides: number = sideCountNumerator / sideCountDenominator;\r\n        let interiorAngleDegrees: number = (180 * (decimalSides - 2)) / decimalSides;\r\n        let interiorAngle: number = Math.PI - Math.PI * interiorAngleDegrees / 180;\r\n\r\n        c.save();\r\n        c.beginPath();\r\n        c.translate(startX, startY);\r\n        c.moveTo(0, 0);\r\n\r\n        for (let i = 0; i < sideCount; i++) {\r\n            c.lineTo(sideLength, 0);\r\n            c.translate(sideLength, 0);\r\n            c.rotate(interiorAngle);\r\n        }\r\n\r\n        c.fill();\r\n        c.restore();\r\n    }\r\n\r\n    public draw(): void {\r\n        let { particles } = this._params;\r\n\r\n        let radius: number;\r\n        if (this.radius_bubble != undefined) {\r\n            radius = this.radius_bubble;\r\n        } else {\r\n            radius = this.radius;\r\n        }\r\n\r\n        let opacity: number;\r\n        if (this.opacity_bubble != undefined) {\r\n            opacity = this.opacity_bubble;\r\n        } else {\r\n            opacity = this.opacity;\r\n        }\r\n\r\n        let color_value: string;\r\n\r\n        if (this.color.rgb) {\r\n            let { r, g, b } = this.color.rgb;\r\n            color_value = `rgba( ${r}, ${g}, ${b}, ${opacity} )`;\r\n        } else {\r\n            let { h, s, l } = this.color.hsl;\r\n            color_value = `hsla( ${h}, ${s}, ${l}, ${opacity} )`;\r\n        }\r\n\r\n        this._canvasParams.ctx.fillStyle = color_value;\r\n        this._canvasParams.ctx.beginPath();\r\n\r\n        switch (this.shape) {\r\n            case 'circle':\r\n                this._canvasParams.ctx.arc(this.x, this.y, radius, 0, Math.PI * 2, false);\r\n                break;\r\n\r\n            case 'edge':\r\n                this._canvasParams.ctx.rect(this.x - radius, this.y - radius, radius * 2, radius * 2);\r\n                break;\r\n\r\n            case 'triangle':\r\n                this._drawShape(this._canvasParams.ctx, this.x - radius, this.y + radius / 1.66, radius * 2, 3, 2);\r\n                break;\r\n\r\n            case 'polygon':\r\n                this._drawShape(\r\n                    this._canvasParams.ctx,\r\n                    this.x - radius / (this._params.particles.shape.polygon.nb_sides / 3.5),\r\n                    this.y - radius / (2.66 / 3.5),\r\n                    radius * 2.66 / (this._params.particles.shape.polygon.nb_sides / 3),\r\n                    this._params.particles.shape.polygon.nb_sides,\r\n                    1\r\n                );\r\n                break;\r\n\r\n            case 'star':\r\n                this._drawShape(\r\n                    this._canvasParams.ctx,\r\n                    this.x - radius * 2 / (this._params.particles.shape.polygon.nb_sides / 4),\r\n                    this.y - radius / (2 * 2.66 / 3.5),\r\n                    radius * 2 * 2.66 / (this._params.particles.shape.polygon.nb_sides / 3),\r\n                    this._params.particles.shape.polygon.nb_sides,\r\n                    2\r\n                );\r\n                break;\r\n\r\n            case 'image':\r\n                let draw: (img_obj: any) => void =\r\n                    (img_obj) => {\r\n                        this._canvasParams.ctx.drawImage(\r\n                            img_obj,\r\n                            this.x - radius,\r\n                            this.y - radius,\r\n                            radius * 2,\r\n                            radius * 2 / this.img.ratio\r\n                        );\r\n                    };\r\n                let img_obj: any;\r\n\r\n                if (this._tmpParams.img_type == 'svg') {\r\n                    img_obj = this.img.obj;\r\n                } else {\r\n                    img_obj = this._tmpParams.img_obj;\r\n                }\r\n\r\n                if (img_obj)\r\n                    draw(img_obj);\r\n                break;\r\n        }\r\n\r\n        this._canvasParams.ctx.closePath();\r\n\r\n        if (this._params.particles.shape.stroke.width > 0) {\r\n            this._canvasParams.ctx.strokeStyle = this._params.particles.shape.stroke.color;\r\n            this._canvasParams.ctx.lineWidth = this._params.particles.shape.stroke.width;\r\n            this._canvasParams.ctx.stroke();\r\n        }\r\n\r\n        this._canvasParams.ctx.fill();\r\n    }\r\n}","import { ParticleInteraction } from './particleInteraction';\r\nimport { IParams, ICanvasParams, IMouseParams, ITmpParams } from './interfaces';\r\nimport { Particle } from './particle';\r\nimport { isInArray, clamp } from './utils';\r\n\r\nexport class ParticlesManager {\r\n    private _interaction: ParticleInteraction;\r\n\r\n    constructor(private _canvasParams: ICanvasParams, private _params: IParams, private _tmpParams: ITmpParams) {\r\n        this._interaction = new ParticleInteraction();\r\n    }\r\n\r\n    public particlesCreate(): void {\r\n        let { color, opacity } = this._params.particles;\r\n        for (let i = 0; i < this._params.particles.number.value; i++) {\r\n            this._params.particles.array.push(new Particle(this._canvasParams, this._params, this._tmpParams, color, opacity.value));\r\n        }\r\n    }\r\n\r\n    private _particlesUpdate(): void {\r\n        type Pos = {\r\n            x_left: number;\r\n            x_right: number;\r\n            y_top: number;\r\n            y_bottom: number;\r\n        };\r\n\r\n        this._params.particles.array.forEach((particle: Particle, i: number) => {\r\n            if (this._params.particles.move.enable) {\r\n                let ms = this._params.particles.move.speed / 2;\r\n                particle.x += particle.vx * ms;\r\n                particle.y += particle.vy * ms;\r\n            }\r\n\r\n            if (this._params.particles.opacity.anim.enable) {\r\n                if (particle.opacity_status == true) {\r\n                    if (particle.opacity >= this._params.particles.opacity.value)\r\n                        particle.opacity_status = false;\r\n                    particle.opacity += particle.vo;\r\n                } else {\r\n                    if (particle.opacity <= this._params.particles.opacity.anim.opacity_min)\r\n                        particle.opacity_status = true;\r\n                    particle.opacity -= particle.vo;\r\n                }\r\n                if (particle.opacity < 0)\r\n                    particle.opacity = 0;\r\n            }\r\n\r\n            if (this._params.particles.size.anim.enable) {\r\n                if (particle.size_status == true) {\r\n                    if (particle.radius >= this._params.particles.size.value)\r\n                        particle.size_status = false;\r\n                    particle.radius += particle.vs;\r\n                } else {\r\n                    if (particle.radius <= this._params.particles.size.anim.size_min)\r\n                        particle.size_status = true;\r\n                    particle.radius -= particle.vs;\r\n                }\r\n                if (particle.radius < 0)\r\n                    particle.radius = 0;\r\n            }\r\n\r\n            let new_pos: Pos;\r\n\r\n            if (this._params.particles.move.out_mode == 'bounce') {\r\n                new_pos = {\r\n                    x_left: particle.radius,\r\n                    x_right: this._canvasParams.width,\r\n                    y_top: particle.radius,\r\n                    y_bottom: this._canvasParams.height\r\n                };\r\n            } else {\r\n                new_pos = {\r\n                    x_left: -particle.radius,\r\n                    x_right: this._canvasParams.width + particle.radius,\r\n                    y_top: -particle.radius,\r\n                    y_bottom: this._canvasParams.height + particle.radius\r\n                };\r\n            }\r\n\r\n            if (particle.x - particle.radius > this._canvasParams.width) {\r\n                particle.x = new_pos.x_left;\r\n                particle.y = Math.random() * this._canvasParams.height;\r\n            } else if (particle.x + particle.radius < 0) {\r\n                particle.x = new_pos.x_right;\r\n                particle.y = Math.random() * this._canvasParams.height;\r\n            }\r\n\r\n            if (particle.y - particle.radius > this._canvasParams.height) {\r\n                particle.y = new_pos.y_top;\r\n                particle.x = Math.random() * this._canvasParams.width;\r\n            } else if (particle.y + particle.radius < 0) {\r\n                particle.y = new_pos.y_bottom;\r\n                particle.x = Math.random() * this._canvasParams.width;\r\n            }\r\n\r\n            switch (this._params.particles.move.out_mode) {\r\n                case 'bounce':\r\n                    if (particle.x + particle.radius > this._canvasParams.width)\r\n                        particle.vx = -particle.vx;\r\n                    else if (particle.x - particle.radius < 0)\r\n                        particle.vx = -particle.vx;\r\n                    if (particle.y + particle.radius > this._canvasParams.height)\r\n                        particle.vy = -particle.vy;\r\n                    else if (particle.y - particle.radius < 0)\r\n                        particle.vy = -particle.vy;\r\n                    break;\r\n            }\r\n\r\n            if (isInArray('grab', this._params.interactivity.events.onhover.mode)) {\r\n                this._grabParticle(particle);\r\n            }\r\n\r\n            if (isInArray('bubble', this._params.interactivity.events.onhover.mode) ||\r\n                isInArray('bubble', this._params.interactivity.events.onclick.mode)) {\r\n                this._bubbleParticle(particle);\r\n            }\r\n\r\n            if (isInArray('repulse', this._params.interactivity.events.onhover.mode) ||\r\n                isInArray('repulse', this._params.interactivity.events.onclick.mode)) {\r\n                this._repulseParticle(particle);\r\n            }\r\n\r\n            if (this._params.particles.line_linked.enable || this._params.particles.move.attract.enable) {\r\n                for (let j = i + 1; j < this._params.particles.array.length; j++) {\r\n                    let link = this._params.particles.array[j];\r\n\r\n                    if (this._params.particles.line_linked.enable)\r\n                        this._interaction.linkParticles(particle, link, this._params, this._canvasParams);\r\n\r\n                    if (this._params.particles.move.attract.enable)\r\n                        this._interaction.attractParticles(particle, link, this._params);\r\n\r\n                    if (this._params.particles.move.bounce)\r\n                        this._interaction.bounceParticles(particle, link);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public particlesDraw(): void {\r\n        this._canvasParams.ctx.clearRect(0, 0, this._canvasParams.width, this._canvasParams.height);\r\n        this._particlesUpdate();\r\n\r\n        this._params.particles.array.forEach((particle: Particle) => {\r\n            particle.draw();\r\n        });\r\n    }\r\n\r\n    public particlesEmpty(): void {\r\n        this._params.particles.array = [];\r\n    }\r\n\r\n    public removeParticles(nb: number): void {\r\n        this._params.particles.array.splice(0, nb);\r\n\r\n        if (!this._params.particles.move.enable) {\r\n            this.particlesDraw();\r\n        }\r\n    }\r\n\r\n    public pushParticles(nb: number, pos?: IMouseParams): void {\r\n        this._tmpParams.pushing = true;\r\n\r\n        for (let i = 0; i < nb; i++) {\r\n            this._params.particles.array.push(\r\n                new Particle(\r\n                    this._canvasParams,\r\n                    this._params,\r\n                    this._tmpParams,\r\n                    this._params.particles.color,\r\n                    this._params.particles.opacity.value,\r\n                    {\r\n                        x: pos ? pos.pos_x : Math.random() * this._canvasParams.width,\r\n                        y: pos ? pos.pos_y : Math.random() * this._canvasParams.height\r\n                    })\r\n            );\r\n\r\n            if (i == nb - 1) {\r\n                if (!this._params.particles.move.enable) {\r\n                    this.particlesDraw();\r\n                }\r\n                this._tmpParams.pushing = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _bubbleParticle(particle: Particle) {\r\n        if (this._params.interactivity.events.onhover.enable &&\r\n            isInArray('bubble', this._params.interactivity.events.onhover.mode)) {\r\n\r\n            let dx_mouse: number = particle.x - this._params.interactivity.mouse.pos_x;\r\n            let dy_mouse: number = particle.y - this._params.interactivity.mouse.pos_y;\r\n            let dist_mouse: number = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse);\r\n            let ratio: number = 1 - dist_mouse / this._params.interactivity.modes.bubble.distance;\r\n\r\n            let init: () => void =\r\n                () => {\r\n                    particle.opacity_bubble = particle.opacity;\r\n                    particle.radius_bubble = particle.radius;\r\n                };\r\n\r\n            if (dist_mouse <= this._params.interactivity.modes.bubble.distance) {\r\n                if (ratio >= 0 && this._params.interactivity.status == 'mousemove') {\r\n\r\n                    if (this._params.interactivity.modes.bubble.size != this._params.particles.size.value) {\r\n                        if (this._params.interactivity.modes.bubble.size > this._params.particles.size.value) {\r\n                            let size: number = particle.radius + (this._params.interactivity.modes.bubble.size * ratio);\r\n                            if (size >= 0) {\r\n                                particle.radius_bubble = size;\r\n                            }\r\n                        } else {\r\n                            let dif: number = particle.radius - this._params.interactivity.modes.bubble.size;\r\n                            let size: number = particle.radius - (dif * ratio);\r\n                            if (size > 0) {\r\n                                particle.radius_bubble = size;\r\n                            } else {\r\n                                particle.radius_bubble = 0;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (this._params.interactivity.modes.bubble.opacity != this._params.particles.opacity.value) {\r\n                        if (this._params.interactivity.modes.bubble.opacity > this._params.particles.opacity.value) {\r\n                            let opacity: number = this._params.interactivity.modes.bubble.opacity * ratio;\r\n                            if (opacity > particle.opacity && opacity <= this._params.interactivity.modes.bubble.opacity) {\r\n                                particle.opacity_bubble = opacity;\r\n                            }\r\n                        } else {\r\n                            let opacity: number = particle.opacity - (this._params.particles.opacity.value - this._params.interactivity.modes.bubble.opacity) * ratio;\r\n                            if (opacity < particle.opacity && opacity >= this._params.interactivity.modes.bubble.opacity) {\r\n                                particle.opacity_bubble = opacity;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                init();\r\n            }\r\n\r\n            if (this._params.interactivity.status == 'mouseleave') {\r\n                init();\r\n            }\r\n\r\n        } else if (this._params.interactivity.events.onclick.enable &&\r\n            isInArray('bubble', this._params.interactivity.events.onclick.mode)) {\r\n\r\n            if (this._tmpParams.bubble_clicking) {\r\n                let dx_mouse: number = particle.x - this._params.interactivity.mouse.click_pos_x;\r\n                let dy_mouse: number = particle.y - this._params.interactivity.mouse.click_pos_y;\r\n                let dist_mouse: number = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse);\r\n                let time_spent: number = (new Date().getTime() - this._params.interactivity.mouse.click_time) / 1000;\r\n\r\n                if (time_spent > this._params.interactivity.modes.bubble.duration) {\r\n                    this._tmpParams.bubble_duration_end = true;\r\n                }\r\n\r\n                if (time_spent > this._params.interactivity.modes.bubble.duration * 2) {\r\n                    this._tmpParams.bubble_clicking = false;\r\n                    this._tmpParams.bubble_duration_end = false;\r\n                }\r\n\r\n                let process: any = (bubble_param: any, particles_param: any, p_obj_bubble: any, p_obj: any, id: any) => {\r\n                    if (bubble_param != particles_param) {\r\n                        if (!this._tmpParams.bubble_duration_end) {\r\n                            if (dist_mouse <= this._params.interactivity.modes.bubble.distance) {\r\n                                let obj: any;\r\n                                if (p_obj_bubble != undefined) {\r\n                                    obj = p_obj_bubble;\r\n                                } else {\r\n                                    obj = p_obj;\r\n                                }\r\n                                if (obj != bubble_param) {\r\n                                    let value: any = p_obj - (time_spent * (p_obj - bubble_param) / this._params.interactivity.modes.bubble.duration);\r\n                                    if (id == 'size')\r\n                                        particle.radius_bubble = value;\r\n                                    if (id == 'opacity')\r\n                                        particle.opacity_bubble = value;\r\n                                }\r\n                            } else {\r\n                                if (id == 'size')\r\n                                    particle.radius_bubble = undefined;\r\n                                if (id == 'opacity')\r\n                                    particle.opacity_bubble = undefined;\r\n                            }\r\n                        } else {\r\n                            if (p_obj_bubble != undefined) {\r\n                                let value_tmp: any = p_obj - (time_spent * (p_obj - bubble_param) / this._params.interactivity.modes.bubble.duration);\r\n                                let dif: any = bubble_param - value_tmp;\r\n                                let value: any = bubble_param + dif;\r\n                                if (id == 'size')\r\n                                    particle.radius_bubble = value;\r\n                                if (id == 'opacity')\r\n                                    particle.opacity_bubble = value;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                if (this._tmpParams.bubble_clicking) {\r\n                    process(this._params.interactivity.modes.bubble.size, this._params.particles.size.value, particle.radius_bubble, particle.radius, 'size');\r\n                    process(this._params.interactivity.modes.bubble.opacity, this._params.particles.opacity.value, particle.opacity_bubble, particle.opacity, 'opacity');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _repulseParticle(particle: Particle) {\r\n        if (this._params.interactivity.events.onhover.enable &&\r\n            isInArray('repulse', this._params.interactivity.events.onhover.mode) &&\r\n            this._params.interactivity.status == 'mousemove') {\r\n\r\n            let dx_mouse: number = particle.x - this._params.interactivity.mouse.pos_x;\r\n            let dy_mouse: number = particle.y - this._params.interactivity.mouse.pos_y;\r\n            let dist_mouse: number = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse);\r\n\r\n            let normVec: any = { x: dx_mouse / dist_mouse, y: dy_mouse / dist_mouse };\r\n            let repulseRadius: number = this._params.interactivity.modes.repulse.distance;\r\n            let velocity: number = 100;\r\n            let repulseFactor: number = clamp((1 / repulseRadius) * (-1 * Math.pow(dist_mouse / repulseRadius, 2) + 1) * repulseRadius * velocity, 0, 50);\r\n\r\n            let pos = {\r\n                x: particle.x + normVec.x * repulseFactor,\r\n                y: particle.y + normVec.y * repulseFactor\r\n            }\r\n\r\n            if (this._params.particles.move.out_mode == 'bounce') {\r\n                if (pos.x - particle.radius > 0 && pos.x + particle.radius < this._canvasParams.width)\r\n                    particle.x = pos.x;\r\n                if (pos.y - particle.radius > 0 && pos.y + particle.radius < this._canvasParams.height)\r\n                    particle.y = pos.y;\r\n            } else {\r\n                particle.x = pos.x;\r\n                particle.y = pos.y;\r\n            }\r\n\r\n        } else if (this._params.interactivity.events.onclick.enable &&\r\n            isInArray('repulse', this._params.interactivity.events.onclick.mode)) {\r\n\r\n            if (!this._tmpParams.repulse_finish) {\r\n                this._tmpParams.repulse_count++;\r\n                if (this._tmpParams.repulse_count == this._params.particles.array.length)\r\n                    this._tmpParams.repulse_finish = true;\r\n            }\r\n\r\n            if (this._tmpParams.repulse_clicking) {\r\n\r\n                let repulseRadius: number = Math.pow(this._params.interactivity.modes.repulse.distance / 6, 3);\r\n\r\n                let dx: number = this._params.interactivity.mouse.click_pos_x - particle.x;\r\n                let dy: number = this._params.interactivity.mouse.click_pos_y - particle.y;\r\n                let d: number = dx * dx + dy * dy;\r\n\r\n                let force: number = -repulseRadius / d * 1;\r\n\r\n                let process: () => void =\r\n                    () => {\r\n                        let f: number = Math.atan2(dy, dx);\r\n                        particle.vx = force * Math.cos(f);\r\n                        particle.vy = force * Math.sin(f);\r\n                        if (this._params.particles.move.out_mode == 'bounce') {\r\n                            let pos: {\r\n                                x: number;\r\n                                y: number;\r\n                            } = {\r\n                                    x: particle.x + particle.vx,\r\n                                    y: particle.y + particle.vy\r\n                                }\r\n                            if (pos.x + particle.radius > this._canvasParams.width)\r\n                                particle.vx = -particle.vx;\r\n                            else if (pos.x - particle.radius < 0)\r\n                                particle.vx = -particle.vx;\r\n                            if (pos.y + particle.radius > this._canvasParams.height)\r\n                                particle.vy = -particle.vy;\r\n                            else if (pos.y - particle.radius < 0)\r\n                                particle.vy = -particle.vy;\r\n                        }\r\n                    };\r\n\r\n                if (d <= repulseRadius) {\r\n                    process();\r\n                }\r\n            } else {\r\n                if (this._tmpParams.repulse_clicking == false) {\r\n                    particle.vx = particle.vx_i;\r\n                    particle.vy = particle.vy_i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _grabParticle(particle: Particle): void {\r\n        let { interactivity, particles } = this._params;\r\n\r\n        if (interactivity.events.onhover.enable &&\r\n            interactivity.status == 'mousemove') {\r\n\r\n            let dx_mouse: number = particle.x - interactivity.mouse.pos_x;\r\n            let dy_mouse: number = particle.y - interactivity.mouse.pos_y;\r\n            let dist_mouse: number = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse);\r\n\r\n            if (dist_mouse <= interactivity.modes.grab.distance) {\r\n\r\n                let { grab } = interactivity.modes;\r\n\r\n                let opacity_line: number = grab.line_linked.opacity - (dist_mouse / (1 / grab.line_linked.opacity)) / grab.distance;\r\n\r\n                if (opacity_line > 0) {\r\n                    let color_line: {\r\n                        r: number;\r\n                        g: number;\r\n                        b: number;\r\n                    } = particles.line_linked.color_rgb_line;\r\n\r\n                    let { r, g, b } = color_line;\r\n                    this._canvasParams.ctx.strokeStyle = `rgba( ${r}, ${g}, ${b}, ${opacity_line} )`;\r\n                    this._canvasParams.ctx.lineWidth = particles.line_linked.width;\r\n\r\n                    this._canvasParams.ctx.beginPath();\r\n                    this._canvasParams.ctx.moveTo(particle.x, particle.y);\r\n                    this._canvasParams.ctx.lineTo(interactivity.mouse.pos_x, interactivity.mouse.pos_y);\r\n                    this._canvasParams.ctx.stroke();\r\n                    this._canvasParams.ctx.closePath();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { ParticlesManager } from './particlesManager';\r\nimport { ICanvasParams, IParams, ITmpParams } from './interfaces';\r\nimport { hexToRgb } from './utils';\r\n\r\nexport class CanvasManager {\r\n    public particlesManager: ParticlesManager;\r\n\r\n    constructor(private _canvasParams: ICanvasParams, private _params: IParams, private _tmpParams: ITmpParams) {\r\n        this._onWindowResize = this._onWindowResize.bind(this);\r\n\r\n        this._retinaInit();\r\n        this._canvasSize();\r\n\r\n        this.particlesManager = new ParticlesManager(this._canvasParams, this._params, this._tmpParams);\r\n        this.particlesManager.particlesCreate();\r\n\r\n        this._densityAutoParticles();\r\n\r\n        let { particles } = this._params;\r\n        particles.line_linked.color_rgb_line = hexToRgb(particles.line_linked.color);\r\n    }\r\n\r\n    public cancelAnimation(): void {\r\n        if (!this._tmpParams.drawAnimFrame) {\r\n            return;\r\n        }\r\n        cancelAnimationFrame(this._tmpParams.drawAnimFrame);\r\n        this._tmpParams.drawAnimFrame = null;\r\n    }\r\n\r\n    public draw(): void {\r\n        let { particles } = this._params;\r\n\r\n        if (particles.shape.type == 'image') {\r\n            if (this._tmpParams.img_type == 'svg') {\r\n                if (this._tmpParams.count_svg >= particles.number.value) {\r\n                    this.particlesManager.particlesDraw();\r\n                    if (!particles.move.enable) {\r\n                        cancelAnimationFrame(this._tmpParams.drawAnimFrame);\r\n                    } else {\r\n                        this._tmpParams.drawAnimFrame = requestAnimationFrame(this.draw.bind(this));\r\n                    }\r\n                } else {\r\n                    if (!this._tmpParams.img_error) {\r\n                        this._tmpParams.drawAnimFrame = requestAnimationFrame(this.draw.bind(this));\r\n                    }\r\n                }\r\n            } else {\r\n                if (this._tmpParams.img_obj != undefined) {\r\n                    this.particlesManager.particlesDraw();\r\n                    if (!particles.move.enable) {\r\n                        cancelAnimationFrame(this._tmpParams.drawAnimFrame);\r\n                    } else {\r\n                        this._tmpParams.drawAnimFrame = requestAnimationFrame(this.draw.bind(this));\r\n                    }\r\n                } else {\r\n                    if (!this._tmpParams.img_error) {\r\n                        this._tmpParams.drawAnimFrame = requestAnimationFrame(this.draw.bind(this));\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            this.particlesManager.particlesDraw();\r\n\r\n            if (!particles.move.enable) {\r\n                cancelAnimationFrame(this._tmpParams.drawAnimFrame);\r\n            } else {\r\n                this._tmpParams.drawAnimFrame = requestAnimationFrame(this.draw.bind(this));\r\n            }\r\n        }\r\n    }\r\n\r\n    private _densityAutoParticles(): void {\r\n        let { particles } = this._params;\r\n\r\n        if (particles.number.density.enable) {\r\n            let area: number = this._canvasParams.el.width * this._canvasParams.el.height / 1000;\r\n\r\n            if (this._tmpParams.retina) {\r\n                area = area / (this._canvasParams.pxratio * 2);\r\n            }\r\n\r\n            let nb_particles: number = area * particles.number.value / particles.number.density.value_area;\r\n\r\n            let missing_particles: number = particles.array.length - nb_particles;\r\n\r\n            if (missing_particles < 0) {\r\n                this.particlesManager.pushParticles(Math.abs(missing_particles));\r\n            } else {\r\n                this.particlesManager.removeParticles(missing_particles);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _retinaInit(): void {\r\n        if (this._params.retina_detect && window.devicePixelRatio > 1) {\r\n            this._canvasParams.pxratio = window.devicePixelRatio;\r\n            this._tmpParams.retina = true;\r\n\r\n            this._canvasParams.width = this._canvasParams.el.offsetWidth * this._canvasParams.pxratio;\r\n            this._canvasParams.height = this._canvasParams.el.offsetHeight * this._canvasParams.pxratio;\r\n\r\n            this._params.particles.size.value = this._tmpParams.obj.size_value * this._canvasParams.pxratio;\r\n            this._params.particles.size.anim.speed = this._tmpParams.obj.size_anim_speed * this._canvasParams.pxratio;\r\n            this._params.particles.move.speed = this._tmpParams.obj.move_speed * this._canvasParams.pxratio;\r\n            this._params.particles.line_linked.distance = this._tmpParams.obj.line_linked_distance * this._canvasParams.pxratio;\r\n            this._params.interactivity.modes.grab.distance = this._tmpParams.obj.mode_grab_distance * this._canvasParams.pxratio;\r\n            this._params.interactivity.modes.bubble.distance = this._tmpParams.obj.mode_bubble_distance * this._canvasParams.pxratio;\r\n            this._params.particles.line_linked.width = this._tmpParams.obj.line_linked_width * this._canvasParams.pxratio;\r\n            this._params.interactivity.modes.bubble.size = this._tmpParams.obj.mode_bubble_size * this._canvasParams.pxratio;\r\n            this._params.interactivity.modes.repulse.distance = this._tmpParams.obj.mode_repulse_distance * this._canvasParams.pxratio;\r\n\r\n        } else {\r\n            this._canvasParams.pxratio = 1;\r\n            this._tmpParams.retina = false;\r\n        }\r\n    }\r\n\r\n    private _canvasClear(): void {\r\n        this._canvasParams.ctx.clearRect(0, 0, this._canvasParams.width, this._canvasParams.height);\r\n    }\r\n\r\n    private _canvasPaint(): void {\r\n        this._canvasParams.ctx.fillRect(0, 0, this._canvasParams.width, this._canvasParams.height);\r\n    }\r\n\r\n    private _canvasSize(): void {\r\n        this._canvasParams.el.width = this._canvasParams.width;\r\n        this._canvasParams.el.height = this._canvasParams.height;\r\n\r\n        if (this._params && this._params.interactivity.events.resize) {\r\n            window.addEventListener('resize', this._onWindowResize);\r\n        }\r\n    }\r\n\r\n    private _onWindowResize(): void {\r\n        this._canvasParams.width = this._canvasParams.el.offsetWidth;\r\n        this._canvasParams.height = this._canvasParams.el.offsetHeight;\r\n\r\n        if (this._tmpParams.retina) {\r\n            this._canvasParams.width *= this._canvasParams.pxratio;\r\n            this._canvasParams.height *= this._canvasParams.pxratio;\r\n        }\r\n\r\n        this._canvasParams.el.width = this._canvasParams.width;\r\n        this._canvasParams.el.height = this._canvasParams.height;\r\n\r\n        if (!this._params.particles.move.enable) {\r\n            this.particlesManager.particlesEmpty();\r\n            this.particlesManager.particlesCreate();\r\n            this.particlesManager.particlesDraw();\r\n            this._densityAutoParticles();\r\n        }\r\n\r\n        this._densityAutoParticles();\r\n    }\r\n}\r\n","import { Directive, ElementRef, AfterViewInit, HostListener, Input, OnDestroy } from \"@angular/core\";\r\nimport { CanvasManager, ICanvasParams, IParams, ITmpParams, getDefaultParams, isInArray, deepExtend, loadImg } from './models';\r\n\r\n@Directive({\r\n    selector: '[d-particles]'\r\n})\r\nexport class ParticlesDirective implements AfterViewInit, OnDestroy  {\r\n    @Input() set params(value: IParams) {\r\n        let defaultParams: IParams = getDefaultParams();\r\n        this._params = deepExtend(defaultParams, value);\r\n    }\r\n\r\n    constructor(private el: ElementRef) { }\r\n\r\n    private _canvasParams: ICanvasParams;\r\n    private _params: IParams;\r\n    private _tmpParams: ITmpParams = {};\r\n    private _canvasManager: CanvasManager;\r\n\r\n    ngOnDestroy(): void {\r\n        if (!this._canvasManager) {\r\n            return;\r\n        }\r\n        this._canvasManager.cancelAnimation();\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this._canvasParams = {\r\n            el: this.el.nativeElement,\r\n            ctx: this.el.nativeElement.getContext('2d'),\r\n            width: this.el.nativeElement.offsetWidth,\r\n            height: this.el.nativeElement.offsetHeight\r\n        };\r\n\r\n        this._tmpParams.obj = {\r\n            size_value: this._params.particles.size.value,\r\n            size_anim_speed: this._params.particles.size.anim.speed,\r\n            move_speed: this._params.particles.move.speed,\r\n            line_linked_distance: this._params.particles.line_linked.distance,\r\n            line_linked_width: this._params.particles.line_linked.width,\r\n            mode_grab_distance: this._params.interactivity.modes.grab.distance,\r\n            mode_bubble_distance: this._params.interactivity.modes.bubble.distance,\r\n            mode_bubble_size: this._params.interactivity.modes.bubble.size,\r\n            mode_repulse_distance: this._params.interactivity.modes.repulse.distance\r\n        };\r\n\r\n        this._params.interactivity.el = (this._params.interactivity.detect_on == 'window') ? window : this._canvasParams.el;\r\n\r\n        if (isInArray('image', this._params.particles.shape.type)) {\r\n            this._tmpParams.img_type = this._params.particles.shape.image.src.substr(this._params.particles.shape.image.src.length - 3);\r\n            loadImg(this._params, this._tmpParams);\r\n        }\r\n\r\n        this._canvasManager = new CanvasManager(this._canvasParams, this._params, this._tmpParams);\r\n        this._canvasManager.draw();\r\n    }\r\n\r\n    /**\r\n     * Mouse move event\r\n     * @param event\r\n     */\r\n    @HostListener('mousemove', ['$event']) onMouseMove(event) {\r\n        let { interactivity } = this._params;\r\n\r\n        if (interactivity.events.onhover.enable ||\r\n            interactivity.events.onclick.enable) {\r\n\r\n            let pos: {\r\n                x: number;\r\n                y: number;\r\n            };\r\n\r\n            if (interactivity.el == window) {\r\n                pos = {\r\n                    x: event.clientX,\r\n                    y: event.clientY\r\n                };\r\n            } else {\r\n                pos = {\r\n                    x: event.offsetX || event.clientX,\r\n                    y: event.offsetY || event.clientY\r\n                };\r\n            }\r\n\r\n            interactivity.mouse.pos_x = pos.x;\r\n            interactivity.mouse.pos_y = pos.y;\r\n\r\n            if (this._tmpParams.retina) {\r\n                interactivity.mouse.pos_x *= this._canvasParams.pxratio;\r\n                interactivity.mouse.pos_y *= this._canvasParams.pxratio;\r\n            }\r\n\r\n            interactivity.status = 'mousemove';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Mouse leave event\r\n     */\r\n    @HostListener('mouseleave') onMouseLeave() {\r\n        let { interactivity } = this._params;\r\n\r\n        if (interactivity.events.onhover.enable ||\r\n            interactivity.events.onclick.enable) {\r\n\r\n            interactivity.mouse.pos_x = null;\r\n            interactivity.mouse.pos_y = null;\r\n            interactivity.status = 'mouseleave';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Click event\r\n     */\r\n    @HostListener('click') onClick() {\r\n        let { interactivity, particles } = this._params;\r\n\r\n        if (interactivity.events.onclick.enable) {\r\n            interactivity.mouse.click_pos_x = interactivity.mouse.pos_x;\r\n            interactivity.mouse.click_pos_y = interactivity.mouse.pos_y;\r\n            interactivity.mouse.click_time = new Date().getTime();\r\n\r\n            switch (interactivity.events.onclick.mode) {\r\n                case 'push':\r\n                    if (particles.move.enable) {\r\n                        this._canvasManager.particlesManager.pushParticles(interactivity.modes.push.particles_nb, interactivity.mouse);\r\n                    } else {\r\n                        if (interactivity.modes.push.particles_nb == 1) {\r\n                            this._canvasManager.particlesManager.pushParticles(interactivity.modes.push.particles_nb, interactivity.mouse);\r\n                        } else if (interactivity.modes.push.particles_nb > 1) {\r\n                            this._canvasManager.particlesManager.pushParticles(interactivity.modes.push.particles_nb);\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n                case 'remove':\r\n                    this._canvasManager.particlesManager.removeParticles(interactivity.modes.remove.particles_nb);\r\n                    break;\r\n\r\n                case 'bubble':\r\n                    this._tmpParams.bubble_clicking = true;\r\n                    break;\r\n\r\n                case 'repulse':\r\n                    this._tmpParams.repulse_clicking = true;\r\n                    this._tmpParams.repulse_count = 0;\r\n                    this._tmpParams.repulse_finish = false;\r\n                    setTimeout(() => {\r\n                        this._tmpParams.repulse_clicking = false;\r\n                    }, interactivity.modes.repulse.duration * 1000);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ParticlesComponent } from './particles.component';\r\nimport { ParticlesDirective } from './particles.directive';\r\n\r\nexport * from './particles.component';\r\nexport * from './particles.directive';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        ParticlesComponent,\r\n        ParticlesDirective\r\n    ],\r\n    exports: [\r\n        ParticlesComponent,\r\n        ParticlesDirective\r\n    ]\r\n})\r\nexport class ParticlesModule { }","/*\n * Public API Surface of ngx-export-as\n */\nexport * from './lib'","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}